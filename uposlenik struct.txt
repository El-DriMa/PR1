/*
 Kreirati dinamički dvodimenzionalni niz čiji su elementi objekti tipa uposlenik 
 (uposlenik je struktura čija su obilježja data). Omogućiti korisniku da unese dimenzije niza.

struct uposlenik
{
    char *ID;
    char *imePrezime;
    float *plata;
}
Redovi dvodimenzionalnog niza predstavljaju različite odjele firme u kojima rade različiti radnici
(radi jednostavnosti rješenja podrazumijevati da svaki odjel ima isti broj radnika).

Omogućiti korisniku unos svih podataka za sve radnike, 
te napraviti funkciju koja će naći najveći prosjek plate po odjelima firme te 
ispisati koji je to redni broj odjela (indeks reda sa najvećim prosjekom) i koji je najveći prosjek plate.
*/
#include<iostream>
#include<cstdlib>
using namespace std;
struct uposlenik
{
    char* ID;
    char* imePrezime;
    float* plata;

    uposlenik() {
        ID = nullptr;
        imePrezime = nullptr;
        plata = nullptr;
    }

    char* alocirajText(const char* temp) {
        if (temp == nullptr) return nullptr;
        int v = strlen(temp) + 1;
        char* novi = new char[v];
        strcpy_s(novi, v, temp);
        return novi;
    }
    char* unosTexta() {
        char text[100];
        cin.getline(text, 100);
        return alocirajText(text);
    }

    void unos() {
        cin.ignore();
        cout << "Unesite ID : ",
            ID = unosTexta();
        cout << "Unesite ime i prezime : ",
            imePrezime = unosTexta();
        plata = new float;
        cout << "Unesite platu : ",
            cin >> *plata;
    }
    void ispis() {
        cout << "ID: " << ID << endl;
        cout << "Ime i prezime : " << imePrezime << endl;
        cout << "Plata : " << *plata << endl;

    }

    ~uposlenik() {
        delete[] ID;
        delete[] imePrezime;
        delete plata;
    }
};
void dealokacijaNiza(uposlenik** u, int red);
void unosNiza(uposlenik** u, int red, int kolona); 
void ispisNiza(uposlenik** u, int red, int kolona);
void najProsjekPlateIOdjel(uposlenik** u, int red, int kolona);
int main() {

    int red, kolona;
    while (cout << "Unesite broj redova : ", cin >> red, red < 0);
    while (cout << "Unesite broj kolona : ", cin >> kolona, kolona < 0);

    uposlenik** u = new uposlenik * [red];
    for (int i = 0; i < red; i++)
    {
        *(u + i) = new uposlenik[kolona];
    }
    unosNiza(u, red, kolona);
    ispisNiza(u, red, kolona);
    najProsjekPlateIOdjel(u, red, kolona);

    dealokacijaNiza(u, red);
    return 1;
}
void unosNiza(uposlenik** u, int red, int kolona) {
    for (int i = 0; i < red; i++)
    {
        for (int j = 0; j < kolona; j++)
        {
            (*(u + i) + j)->unos();
        }
    }
}
void ispisNiza(uposlenik** u, int red, int kolona) {
    for (int i = 0; i < red; i++)
    {
        for (int j = 0; j < kolona; j++)
        {
            (*(u + i) + j)->ispis();
        }
    }
}
void najProsjekPlateIOdjel(uposlenik** u, int red, int kolona) {
    int najOdjel,najPlata=0;
    float sumaPlata = 0.0f;
    for (int i = 0; i < red; i++)
    {
        for (int j = 0; j < kolona; j++)
        {
            sumaPlata += *(*(u + i) + j)->plata;
        }
        sumaPlata = sumaPlata / float(kolona);
        if (sumaPlata > najPlata) {
            najPlata = sumaPlata;
            najOdjel = i;
        }
        sumaPlata = 0;
    }
    cout << "Najveci prosjek plate je : " << najPlata << ",a broj odjela je : " << najOdjel << endl; 
}
void dealokacijaNiza(uposlenik** u, int red) {
    for (int i = 0; i < red; i++)
    {
        delete[] * (u + i);
    }
    delete[] u;
    u = nullptr;
}